" IMPORTANT
    " Don't use Vi compatibility mode (must be first command!)
    set nocompatible



" PLUGINS
    " Pathogen Config
    runtime bundle/vim-pathogen/autoload/pathogen.vim
    call pathogen#infect()
    call pathogen#helptags()

    " Enable Plugins
    filetype plugin indent on

    " Plugin Settings
        " Airline
            " Always on
            set laststatus=2 

            " Use Powerline fonts
            let g:airline_powerline_fonts=1

        " CtrlP
            " Default to Mixed mode
            let g:ctrlp_cmd='CtrlPMixed'

            " Search hidden files/directories
            let g:ctrlp_show_hidden=1

        " Auto Pairs
            " Enable fly mode
            let g:AutoPairsFlyMode=1



" SETTINGS
    " General
    set ruler
    set wrap
    set showcmd
    set hidden
    set splitright
    set noerrorbells
    set shortmess+=I
    set backspace=indent,eol,start
    set sessionoptions=blank,buffers,tabpages,curdir

    " No Swap or Backup files
    set nobackup
    set nowritebackup
    set noswapfile

    " Tabs
    set tabstop=4
    set softtabstop=4
    set shiftwidth=4
    set expandtab

    " Search
    set incsearch
    set hlsearch
    set ignorecase
    set smartcase
    nohlsearch

    " Indent
    set autoindent
    set smartindent

    " Line Numbering
    set number
    set relativenumber

    " Scroll Margins
    set scrolloff=5
    set sidescrolloff=5

    " WildMenu
    set wildmenu
    set wildmode=list:full,full

    " Appearance
    syntax enable
    set t_Co=256
    color monokai
    hi MatchParen cterm=bold ctermbg=none ctermfg=196



" KEY BINDS
    " Leader Key
        let mapleader="\\"


    " General
        " Remap '?' to clear search highlighting
        nnoremap <silent> ? :noh<return>

        " Make up and down movement through wrapped lines work as expected
        nnoremap <expr> j v:count ? 'j':'gj'
        nnoremap <expr> k v:count ? 'k':'gk'


    " CtrlP
        " Open in Files mode
        nnoremap <space> :CtrlP<return>


    " Auto Pairs
        " Jump back and insert closing character
        let g:AutoPairsShortcutBackInsert='<c-j>'


    " Tabular Shortcuts (// => : | - =)
        nnoremap <silent> <leader>/ :Tabularize /[^:]\zs\/\/<return>
        nnoremap <silent> <leader>> :Tabularize /=><return>
        nnoremap <silent> <leader>: :Tabularize /:\zs<return>
        nnoremap <silent> <leader>\| :Tabularize /\|<return>
        nnoremap <silent> <leader>- :Tabularize /-<return>
        nnoremap <silent> <leader>= :Tabularize /=<return>


    " Function Keys
        " Toggle auto reloading
        inoremap <F4> <esc>:call AutoReloadToggle()<return>
        nnoremap <F4> :call AutoReloadToggle()<return>

        " Copy from system clipboard
        inoremap <silent> <F9> <esc>:%y+<return>
        nnoremap <silent> <F9> :%y+<return>
        vnoremap <silent> <F9> "+y

        " Paste from system clipboard
        inoremap <silent> <F10> <esc>:set paste<return>"+p:set nopaste<return>a
        nnoremap <silent> <F10> :set paste<return>"+p:set nopaste<return>
        vnoremap <silent> <F10> d:set paste<return>"+P:set nopaste<return>





" Auto reloading script
let autoReloadOn = 0
let browser = 0
let vim = 0
function! AutoReloadToggle()
    if g:autoReloadOn == 0
        echo "Auto reloading mode ON... please select your browser window."
        let g:browser = system('xdotool selectwindow')
        let g:vim = system('xdotool getactivewindow')
        let g:autoReloadOn = 1
    else
        echo "Auto reloading mode OFF"
        let g:autoReloadOn = 0
    endif
endfunction
function! AutoReload()
    if g:autoReloadOn == 1
        silent exec "!xdotool windowactivate ".g:browser
        silent exec "!xdotool key F5 && xdotool windowactivate ".g:vim
    endif
endfunction
autocmd BufWritePost * :call AutoReload()
